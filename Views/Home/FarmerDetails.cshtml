@model ST10390916_PROG7311_POE.Models.User

@{
    ViewData["Title"] = "Farmer Details";
    var user = ViewData["User"] as ST10390916_PROG7311_POE.Models.User;
    var products = ViewData["Products"] as List<ST10390916_PROG7311_POE.Models.Product>;
    var categories = products?.Select(p => p.Category.ToString()).Distinct().ToList() ?? new List<string>();
    bool canEdit = (bool)ViewData["CanEdit"];
    var selectedCategory = Context.Request.Query["category"].ToString();
    var selectedDate = Context.Request.Query["productionDate"].ToString();
}

<head>
    <link rel="stylesheet" href="~/lib/bootstrap-icons/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ST10390916_PROG7311_POE.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
 </head>

<div class="container mt-4">
    @if (!canEdit)
    {
        <div class="mb-3">
            <a asp-action="Marketplace" class="btn btn-outline-secondary btn-sm">
                <i class="bi bi-arrow-left"></i> Back to Marketplace
            </a>
        </div>
    }

    <h1 class="mb-4 text-primary">Profile</h1>

    <!-- Profile Card -->
    <div class="card mb-5" style="border-radius: 16px; max-width: 500px;">
        <div class="card-body d-flex align-items-center" style="border-radius: 16px">
            <div>
                <h5 class="card-title mb-1">@user?.FirstName @user?.LastName</h5>
                <p class="mb-0 text-muted"><strong>Email:</strong> @user?.Email</p>
            </div>
        </div>
    </div>

    <hr/>

    <!-- Product Section -->
    <div class="d-flex flex-wrap justify-content-between align-items-center mt-4 mb-3 gap-2">
        <div class="d-flex align-items-center gap-2">
            <h2 class="text-primary mb-0 me-2">Products</h2>
            @if (canEdit)
            {
                <a asp-controller="Farmer" asp-action="AddProduct" class="btn btn-primary d-flex align-items-center py-1 px-2">
                    <span class="me-1">Add new product</span>
                    <i class="bi bi-plus-lg"></i>
                </a>
            }
        </div>

        <form method="get" class="d-flex flex-wrap gap-2">
            <input type="hidden" name="UserID" value="@user?.UserID" />
            <select name="category" class="form-select w-auto">
                <option value="">All Categories</option>
                @foreach (var category in categories)
                {
                    <option value="@category" selected="@(category == selectedCategory ? "selected" : null)">
                        @category
                    </option>
                }
            </select>

            <input type="date" name="productionDate" class="form-control w-auto" value="@selectedDate" />


            <button type="submit" class="btn btn-success">Apply Filters</button>
        </form>

    </div>


    <div class="row" id="productCards">
        @if (products == null || !products.Any())
        {
            <div class="col-12 text-muted text-center py-3">No products available.</div>
        }
        else
        {
            foreach (var product in products)
            {
                <div class="col-md-4 mb-4 product-card" data-category="@product.Category">
                    <div class="card h-100 shadow-sm" style="border-radius: 16px;">
                        <img src="@product.ImagePath" class="card-img-top" style="height: 200px; object-fit: cover; border-top-left-radius: 15.5px; border-top-right-radius:15.5px" alt="@product.ProductName">
                        <div class="card-body">
                            <h5 class="card-title">@product.ProductName</h5>
                            <p class="card-text mb-1"><strong>Price:</strong> @product.Price.ToString("C")</p>
                            <p class="card-text"><strong>Production Date:</strong> @product.ProductionDate.ToString("yyyy-MM-dd")</p>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('categoryFilter').addEventListener('change', function () {
            const selectedCategory = this.value;
            const cards = document.querySelectorAll('.product-card');
            let visible = 0;

            cards.forEach(card => {
                const category = card.getAttribute('data-category');
                const show = selectedCategory === 'All' || category === selectedCategory;
                card.style.display = show ? '' : 'none';
                if (show) visible++;
            });

            if (visible === 0) {
                if (!document.getElementById('noResultsMessage')) {
                    const div = document.createElement('div');
                    div.className = 'col-12 text-muted text-center py-3';
                    div.id = 'noResultsMessage';
                    div.innerText = 'No products match the selected category.';
                    document.getElementById('productCards').appendChild(div);
                }
            } else {
                const msg = document.getElementById('noResultsMessage');
                if (msg) msg.remove();
            }
        });
    </script>
}
